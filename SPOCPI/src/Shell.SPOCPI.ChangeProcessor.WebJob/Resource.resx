<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDriveDeltaEntityNoRowKey" xml:space="preserve">
    <value>No RowKey available</value>
  </data>
  <data name="AddedDriveItem" xml:space="preserve">
    <value>Added Item to drive item list: </value>
  </data>
  <data name="ChangeProcessorCustomMinuteSchedule" xml:space="preserve">
    <value>CPCustomMinuteSchedule</value>
  </data>
  <data name="CompleteMessageProcessingNotificationError" xml:space="preserve">
    <value>Error while updating notification status in Notification storage table.</value>
  </data>
  <data name="CompleteMessageProcessingNotificationSuccess" xml:space="preserve">
    <value>Successfully completed updating notification status in Notification storage table.</value>
  </data>
  <data name="CompleteMessageProcessingTokenError" xml:space="preserve">
    <value>Error while updating deltaToken in Drive delta storage table.</value>
  </data>
  <data name="CompleteMessageProcessingTokenSuccess" xml:space="preserve">
    <value>Successfully completed updating deltaToken in Drive delta storage table.</value>
  </data>
  <data name="DeltaNumberOfChange" xml:space="preserve">
    <value>Delta Found {0} changes.</value>
  </data>
  <data name="DeltaTokenResultsCount" xml:space="preserve">
    <value>Delta token query results count: {0}</value>
  </data>
  <data name="DriveItemCount" xml:space="preserve">
    <value>Total Drive Items: {0}</value>
  </data>
  <data name="DriveItemsQueueCompleted" xml:space="preserve">
    <value>Completed pushing Drive Items to queue: {0}</value>
  </data>
  <data name="DriveItemsQueueCount" xml:space="preserve">
    <value>Total Drive Items sent to queue: {0}</value>
  </data>
  <data name="ErrorHandlerMessage" xml:space="preserve">
    <value>ErrorHandler called. Function {0}:{1} failed.</value>
  </data>
  <data name="FunctionsInitializationSuccess" xml:space="preserve">
    <value>Initialized Function successfully</value>
  </data>
  <data name="GetMessageFromStorageNoNotification" xml:space="preserve">
    <value>Cannot find NotificationMessage storage table.</value>
  </data>
  <data name="ItemNotTargeted" xml:space="preserve">
    <value>Item not targeted for document processing</value>
  </data>
  <data name="LockForProcessingBatchNotificationError" xml:space="preserve">
    <value>Errow when trying to acquire lock on notification of same batch for processing.</value>
  </data>
  <data name="LockForProcessingBatchNotificationFailed" xml:space="preserve">
    <value>Failed to acquire lock on notification of same batch for processing.</value>
  </data>
  <data name="LockForProcessingBatchNotificationPartialSuccess" xml:space="preserve">
    <value>Acquired lock partial on notification of same batch for processing.</value>
  </data>
  <data name="LockForProcessingBatchNotificationSuccess" xml:space="preserve">
    <value>Acquired lock on notification of same batch for processing.</value>
  </data>
  <data name="LockForProcessingDeltaFailed" xml:space="preserve">
    <value>Failed to acquire lock on notification for processing. Rolling back the changes.</value>
  </data>
  <data name="LockForProcessingDeltaReleaseSuccess" xml:space="preserve">
    <value>Failed to release lock on drive delta for processing.</value>
  </data>
  <data name="LockForProcessingDeltaSuccess" xml:space="preserve">
    <value>Successfully acquired lock on drive delta for processing.</value>
  </data>
  <data name="LockForProcessingNotificationError" xml:space="preserve">
    <value>Error when trying to acquire lock on notifications</value>
  </data>
  <data name="LockForProcessingNotificationFailed" xml:space="preserve">
    <value>Failed to acquire lock on notification for processing.</value>
  </data>
  <data name="LockForProcessingNotificationSuccess" xml:space="preserve">
    <value>Successfully acquired lock on notification for processing.</value>
  </data>
  <data name="MaximumRetryAttemptWarning" xml:space="preserve">
    <value>Maximum retry attempts {0}, has been attempted.</value>
  </data>
  <data name="MessagesCount" xml:space="preserve">
    <value>Found {0} messages for processing.</value>
  </data>
  <data name="NotificationReceived" xml:space="preserve">
    <value>Notification Received for subscription: {0}</value>
  </data>
  <data name="ProcessQueueCompleted" xml:space="preserve">
    <value>ProcessQueue Completed at:</value>
  </data>
  <data name="ProcessQueueTrigerred" xml:space="preserve">
    <value>ProcessQueue Triggered at:</value>
  </data>
  <data name="ProcessSharePointChangesDeltaTokenSet" xml:space="preserve">
    <value>Latest Delta token has been set to the variable.</value>
  </data>
  <data name="ProcessSharePointChangesSPCompleted" xml:space="preserve">
    <value>Processing SharePoint changes completed</value>
  </data>
  <data name="UnlockForProcessingBatchNotificationError" xml:space="preserve">
    <value>Errow when trying to unlock notification of same batch for processing.</value>
  </data>
  <data name="UnlockForProcessingBatchNotificationFailed" xml:space="preserve">
    <value>Failed to unlock notification of same batch for processing.</value>
  </data>
  <data name="UnlockForProcessingBatchNotificationPartialSuccess" xml:space="preserve">
    <value>Unlocked partial on notification of same batch for processing.</value>
  </data>
  <data name="UnlockForProcessingBatchNotificationSuccess" xml:space="preserve">
    <value>Unlocked notification of same batch for processing.</value>
  </data>
  <data name="UpdateDeltaTokenNoDeltaUrl" xml:space="preserve">
    <value>No DeltaUrl available</value>
  </data>
  <data name="UpdateDeltaTokenStart" xml:space="preserve">
    <value>Started updating deltaToken in Drive delta storage table.</value>
  </data>
  <data name="UpdateDriveDeltaStatusConflict" xml:space="preserve">
    <value>Conflict error thrown while trying to update drive delta entity</value>
  </data>
  <data name="UpdateDriveDeltaStatusError" xml:space="preserve">
    <value>Error occurred while trying to update drive delta entity</value>
  </data>
</root>