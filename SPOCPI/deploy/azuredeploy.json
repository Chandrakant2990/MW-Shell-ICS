{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"subscriptionId": {
			"type": "string",
			"metadata": {
				"description": "The azure subscription id"
			}
		},
		"resourceGroupName": {
			"type": "string",
			"metadata": {
				"description": "The name of the resource group for resources to be created."
			}
		},
		"environment": {
			"type": "string",
			"metadata": {
				"description": "The Environment where resources need to be deployed."
			}
		},
		"AADAppClientId": {
			"type": "string",
			"metadata": {
				"description": "AAD App Client Id"
			}
		},
		"AADAppClientSecret": {
			"type": "string",
			"metadata": {
				"description": "AAD App Client Secret"
			}
		},
		"AADLoginAppClientId": {
			"type": "string",
			"metadata": {
				"description": "AAD Login Client Id"
			}
		},
		"AADLoginAppClientSecret": {
			"type": "string",
			"metadata": {
				"description": "AAD Login Client Secret"
			}
		},
		"ASPNETCORE_ENVIRONMENT": {
			"type": "string",
			"metadata": {
				"description": "ASPNETCORE_ENVIRONMENT value for Azure Function Configuration"
			}
		},
		"redisCacheName": {
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Redis Cache to create."
			}
		},
		"redisCacheSKU": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard",
				"Premium"
			],
			"defaultValue": "Standard",
			"metadata": {
				"description": "The pricing tier of the new Azure Redis Cache."
			}
		},
		"redisCacheFamily": {
			"type": "string",
			"defaultValue": "C",
			"metadata": {
				"description": "The family for the sku."
			},
			"allowedValues": [
				"C",
				"P"
			]
		},
		"redisCacheCapacity": {
			"type": "int",
			"allowedValues": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			],
			"defaultValue": 1,
			"metadata": {
				"description": "The size of the new Azure Redis Cache instance. "
			}
		},
		"docTrackStorage": {
			"type": "string",
			"metadata": {
				"description": "Document Tracking Storage Account Name."
			}
		},
		"webHooksStorage": {
			"type": "string",
			"metadata": {
				"description": "WebHooks Storage Account Name."
			}
		},
		"webHooksStorageTableNames": {
			"type": "array",
			"metadata": {
				"description": "Table names in webhooks storage"
			}
		},
		"analyticsStorage": {
			"type": "string",
			"metadata": {
				"description": "Analytics Storage Account Name."
			}
		},
		"analyticsStorageTableNames": {
			"type": "array",
			"metadata": {
				"description": "Table names in analytics storage"
			}
		},
		"docTrackStorageTableNames": {
			"type": "array",
			"metadata": {
				"description": "Table names in doctrack storage"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_ZRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Storage Account type"
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"runtime": {
			"type": "string",
			"defaultValue": "node",
			"allowedValues": [
				"node",
				"dotnet",
				"java"
			],
			"metadata": {
				"description": "The language worker runtime to load in the function app."
			}
		},
		"storageaccountsku": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"defaultValue": "Basic",
			"metadata": {
				"description": "The pricing tier for the storage account."
			}
		},
		"servicebussku": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"defaultValue": "Basic",
			"metadata": {
				"description": "The pricing tier for the service bus."
			}
		},
		"appservicesku": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"defaultValue": "Basic",
			"metadata": {
				"description": "The pricing tier for the hosting plan."
			}
		},
		"highconsumptionappservicesku": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"defaultValue": "Standard",
			"metadata": {
				"description": "The pricing tier for the high consumption hosting plan."
			}
		},
		"appserviceskuCode": {
			"type": "string",
			"defaultValue": "B1"
		},
		"highconsumptionappserviceskuCode": {
			"type": "string",
			"defaultValue": "S1"
		},
		"appserviceworkerSize": {
			"type": "string",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"defaultValue": "0",
			"metadata": {
				"description": "The instance size of the hosting plan (small, medium, or large)."
			}
		},
		"highconsumptionappserviceworkerSize": {
			"type": "string",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"defaultValue": "0",
			"metadata": {
				"description": "The instance size of the hosting plan (small, medium, or large)."
			}
		},
		"serviceBusNamespaceName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Service Bus namespace"
			}
		},
		"changeprocessoutputqueue": {
			"type": "string",
			"metadata": {
				"description": "Change process output queue"
			}
		},
		"subscriptionqueue": {
			"type": "string",
			"metadata": {
				"description": "subscription queue"
			}
		},
		"webhooksnotificationqueue": {
			"type": "string",
			"metadata": {
				"description": "WebHooks notification queue"
			}
		},
		"doctrackqueue": {
			"type": "string",
			"metadata": {
				"description": "Doctrack queue"
			}
		},
		"appInsightName": {
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Application Insight to create."
			}
		},
		"appInsightType": {
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Application Insight Type to create."
			}
		},
		"changeprocessorFunctionApp": {
			"type": "string",
			"metadata": {
				"description": "Change Processor Function app."
			}
		},
		"changeprocessorWebApp": {
			"type": "string",
			"metadata": {
				"description": "Change Processor Web App."
			}
		},
		"notificationReceiverFunctionApp": {
			"type": "string",
			"metadata": {
				"description": "Notification receiver function app."
			}
		},
		"populateTrackingFunctionApp": {
			"type": "string",
			"metadata": {
				"description": "Populate tracking function app."
			}
		},
		"webHooksManagerWebApp": {
			"type": "string",
			"metadata": {
				"description": "Web Hooks manager web app."
			}
		},
		"searchName": {
			"type": "string",
			"metadata": {
				"description": "Azure Search service name."
			}
		},
		"searchSku": {
			"type": "string",
			"defaultValue": "standard",
			"allowedValues": [
				"free",
				"basic",
				"standard",
				"standard2",
				"standard3"
			],
			"metadata": {
				"description": "The SKU of the search service you want to create. E.g. free or standard"
			}
		},
		"searchReplicaCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 12,
			"defaultValue": 1,
			"metadata": {
				"description": "Replicas distribute search workloads across the service. You need 2 or more to support high availability (applies to Basic and Standard only)."
			}
		},
		"searchPartitionCount": {
			"type": "int",
			"allowedValues": [
				1,
				2,
				3,
				4,
				6,
				12
			],
			"defaultValue": 1,
			"metadata": {
				"description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple Azure Search units."
			}
		},
		"azureTenantId": {
			"type": "string",
			"defaultValue": "[subscription().tenantId]",
			"metadata": {
				"description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
			}
		},
		"tenantName": {
			"type": "string",
			"metadata": {
				"description": "SharePoint tenant name."
			}
		},
		"keyVaultName": {
			"type": "string",
			"metadata": {
				"description": "Specifies the name of the key vault."
			}
		},
		"keyVaultSkuName": {
			"type": "string",
			"defaultValue": "Standard",
			"allowedValues": [
				"Standard",
				"Premium"
			],
			"metadata": {
				"description": "Specifies whether the key vault is a standard vault or a premium vault."
			}
		},
		"keyVaultEnabledForDeployment": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [
				true,
				false
			],
			"metadata": {
				"description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
			}
		},
		"keyVaultEnabledForDiskEncryption": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [
				true,
				false
			],
			"metadata": {
				"description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
			}
		},
		"keyVaultEnabledForTemplateDeployment": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [
				true,
				false
			],
			"metadata": {
				"description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
			}
		}
	},
	"variables": {
		"redisCacheName": "[concat(parameters('environment'),parameters('redisCacheName'))]",
		"notificationReceiverFunctionApp": "[concat(parameters('environment'),parameters('notificationReceiverFunctionApp'))]",
		"changeprocessorFunctionApp": "[concat(parameters('environment'),parameters('changeprocessorFunctionApp'))]",
		"populateTrackingFunctionApp": "[concat(parameters('environment'),parameters('populateTrackingFunctionApp'))]",
		"webHooksManagerWebApp": "[concat(parameters('environment'),parameters('webHooksManagerWebApp'))]",
		"changeprocessorWebApp": "[concat(parameters('environment'),parameters('changeprocessorWebApp'))]",
		"hostingPlanName": "[concat(parameters('environment'),'spocpi','appservice')]",
		"highconsumptionhostingPlanName": "[concat(parameters('environment'),'spocpi','highconsumptionappservice')]",
		"docTrackStorage": "[concat(parameters('environment'),parameters('docTrackStorage'))]",
		"webHooksStorage": "[concat(parameters('environment'),parameters('webHooksStorage'))]",
		"analyticsStorage": "[concat(parameters('environment'),parameters('analyticsStorage'))]",
		"applicationInsightsName": "[concat(parameters('environment'),parameters('appInsightName'))]",
		"functionWorkerRuntime": "[parameters('runtime')]",
		"servicebusname": "[concat(parameters('environment'),parameters('serviceBusNamespaceName'))]",
		"defaultSASKeyName": "RootManageSharedAccessKey",
		"authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('servicebusname'), variables('defaultSASKeyName'))]",
		"searchName": "[concat(parameters('environment'),parameters('searchName'))]",
		"offerType": "Standard",
		"keyVaultName": "[concat(parameters('environment'), parameters('keyVaultName'))]"
	},
	"resources": [
		{
			"apiVersion": "2015-08-01",
			"name": "[variables('redisCacheName')]",
			"type": "Microsoft.Cache/Redis",
			"location": "[parameters('location')]",
			"properties": {
				"enableNonSslPort": false,
				"sku": {
					"capacity": "[parameters('redisCacheCapacity')]",
					"family": "[parameters('redisCacheFamily')]",
					"name": "[parameters('redisCacheSKU')]"
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('docTrackStorage')]",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",
			"kind": "StorageV2",
			"sku": {
				"name": "[parameters('storageAccountType')]",
				"tier": "[parameters('storageaccountsku')]"
			},
			"properties": {
				"accountType": "[parameters('storageAccountType')]",
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"enabled": true
						},
						"blob": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('webHooksStorage')]",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",
			"kind": "StorageV2",
			"sku": {
				"name": "[parameters('storageAccountType')]",
				"tier": "[parameters('storageaccountsku')]"
			},
			"properties": {
				"accountType": "[parameters('storageAccountType')]",
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"enabled": true
						},
						"blob": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('analyticsStorage')]",
			"apiVersion": "2018-07-01",
			"location": "[parameters('location')]",
			"kind": "StorageV2",
			"sku": {
				"name": "[parameters('storageAccountType')]",
				"tier": "[parameters('storageaccountsku')]"
			},
			"properties": {
				"accountType": "[parameters('storageAccountType')]",
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"enabled": true
						},
						"blob": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"apiVersion": "2015-05-01",
			"name": "[variables('applicationInsightsName')]",
			"type": "Microsoft.Insights/components",
			"kind": "[parameters('appInsightType')]",
			"location": "[parameters('location')]",
			"properties": {
				"Application_Type": "[parameters('appInsightType')]",
				"ApplicationId": "[variables('applicationInsightsName')]",
				"Request_Source": "IbizaWebAppExtensionCreate"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2016-09-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[parameters('location')]",
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"workerSizeId": "[parameters('appserviceworkerSize')]",
				"hostingEnvironment": "",
				"numberOfWorkers": "1"
			},
			"sku": {
				"Tier": "[parameters('appservicesku')]",
				"Name": "[parameters('appserviceskuCode')]"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2016-09-01",
			"name": "[variables('highconsumptionhostingPlanName')]",
			"location": "[parameters('location')]",
			"properties": {
				"name": "[variables('highconsumptionhostingPlanName')]",
				"workerSizeId": "[parameters('highconsumptionappserviceworkerSize')]",
				"hostingEnvironment": "",
				"numberOfWorkers": "1"
			},
			"sku": {
				"Tier": "[parameters('highconsumptionappservicesku')]",
				"Name": "[parameters('highconsumptionappserviceskuCode')]"
			}
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('notificationReceiverFunctionApp')]",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"properties": {
				"name": "[variables('notificationReceiverFunctionApp')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"clientAffinityEnabled": false,
				"httpsOnly": true,
				"siteConfig": {
					"appSettings": [
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "dotnet"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.Insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.14.1"
						}
					],
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('docTrackStorage'))]"
			]
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('changeprocessorFunctionApp')]",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"properties": {
				"name": "[variables('changeprocessorFunctionApp')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"clientAffinityEnabled": false,
				"httpsOnly": true,
				"siteConfig": {
					"appSettings": [
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "dotnet"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.Insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.14.1"
						}
					],
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('docTrackStorage'))]"
			]
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('populateTrackingFunctionApp')]",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"properties": {
				"name": "[variables('populateTrackingFunctionApp')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"clientAffinityEnabled": false,
				"httpsOnly": true,
				"siteConfig": {
					"appSettings": [
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "dotnet"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.Insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.14.1"
						}
					],
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('docTrackStorage'))]"
			]
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('webHooksManagerWebApp')]",
			"location": "[parameters('location')]",
			"kind": "app",
			"properties": {
				"name": "[variables('webHooksManagerWebApp')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"httpsOnly": true,
				"siteConfig": {
					"appSettings": [
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.Insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "SCM_COMMAND_IDLE_TIMEOUT",
							"value": "600"
						},
						{
							"name": "WEBJOBS_IDLE_TIMEOUT",
							"value": "600"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.14.1"
						}
					],
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
			]
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('changeprocessorWebApp')]",
			"location": "[parameters('location')]",
			"kind": "app",
			"properties": {
				"name": "[variables('changeprocessorWebApp')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('highconsumptionhostingPlanName'))]",
				"hostingEnvironment": "",
				"httpsOnly": true,
				"siteConfig": {
					"appSettings": [
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.Insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "SCM_COMMAND_IDLE_TIMEOUT",
							"value": "600"
						},
						{
							"name": "WEBJOBS_IDLE_TIMEOUT",
							"value": "600"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.14.1"
						}
					],
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.Web/serverfarms', variables('highconsumptionhostingPlanName'))]"
			]
		},
		{
			"apiVersion": "2017-04-01",
			"name": "[variables('servicebusname')]",
			"type": "Microsoft.ServiceBus/namespaces",
			"location": "[parameters('location')]",
			"sku": {
				"name": "[parameters('servicebussku')]"
			},
			"properties": {},
			"resources": [
				{
					"apiVersion": "2017-04-01",
					"name": "[parameters('changeprocessoutputqueue')]",
					"type": "Queues",
					"dependsOn": [
						"[concat('Microsoft.ServiceBus/namespaces/', variables('servicebusname'))]"
					],
					"properties": {
						"lockDuration": "PT05M",
						"maxSizeInMegabytes": "5120",
						"requiresDuplicateDetection": false,
						"requiresSession": false,
						"defaultMessageTimeToLive": "P90D",
						"deadLetteringOnMessageExpiration": "true",
						"enableBatchedOperations": true,
						"duplicateDetectionHistoryTimeWindow": "PT10M",
						"maxDeliveryCount": "10",
						"status": "Active",
						"enablePartitioning": false,
						"enableExpress": false
					}
				},
				{
					"apiVersion": "2017-04-01",
					"name": "[parameters('webhooksnotificationqueue')]",
					"type": "Queues",
					"dependsOn": [
						"[concat('Microsoft.ServiceBus/namespaces/', variables('servicebusname'))]"
					],
					"properties": {
						"lockDuration": "PT05M",
						"maxSizeInMegabytes": "5120",
						"requiresDuplicateDetection": false,
						"requiresSession": false,
						"defaultMessageTimeToLive": "P90D",
						"deadLetteringOnMessageExpiration": "true",
						"enableBatchedOperations": true,
						"duplicateDetectionHistoryTimeWindow": "PT10M",
						"maxDeliveryCount": "10",
						"status": "Active",
						"enablePartitioning": false,
						"enableExpress": false
					}
				},
				{
					"apiVersion": "2017-04-01",
					"name": "[parameters('doctrackqueue')]",
					"type": "Queues",
					"dependsOn": [
						"[concat('Microsoft.ServiceBus/namespaces/', variables('servicebusname'))]"
					],
					"properties": {
						"lockDuration": "PT05M",
						"maxSizeInMegabytes": "5120",
						"requiresDuplicateDetection": false,
						"requiresSession": false,
						"defaultMessageTimeToLive": "P90D",
						"deadLetteringOnMessageExpiration": "true",
						"enableBatchedOperations": true,
						"duplicateDetectionHistoryTimeWindow": "PT10M",
						"maxDeliveryCount": "10",
						"status": "Active",
						"enablePartitioning": false,
						"enableExpress": false
					}
				},
				{
					"apiVersion": "2017-04-01",
					"name": "[parameters('subscriptionqueue')]",
					"type": "Queues",
					"dependsOn": [
						"[concat('Microsoft.ServiceBus/namespaces/', variables('servicebusname'))]"
					],
					"properties": {
						"lockDuration": "PT05M",
						"maxSizeInMegabytes": "5120",
						"requiresDuplicateDetection": false,
						"requiresSession": false,
						"defaultMessageTimeToLive": "P90D",
						"deadLetteringOnMessageExpiration": "true",
						"enableBatchedOperations": true,
						"duplicateDetectionHistoryTimeWindow": "PT10M",
						"maxDeliveryCount": "10",
						"status": "Active",
						"enablePartitioning": false,
						"enableExpress": false
					}
				}
			]
		},
		{
			"apiVersion": "2015-08-19",
			"name": "[variables('searchName')]",
			"type": "Microsoft.Search/searchServices",
			"location": "[parameters('location')]",
			"sku": {
				"name": "[toLower(parameters('searchSku'))]"
			},
			"properties": {
				"replicaCount": "[parameters('searchReplicaCount')]",
				"partitionCount": "[parameters('searchPartitionCount')]"
			}
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"name": "[variables('keyVaultName')]",
			"apiVersion": "2018-02-14",
			"location": "[parameters('location')]",
			"properties": {
				"enabledForDeployment": "[parameters('keyVaultEnabledForDeployment')]",
				"enabledForDiskEncryption": "[parameters('keyVaultEnabledForDiskEncryption')]",
				"enabledForTemplateDeployment": "[parameters('keyVaultEnabledForTemplateDeployment')]",
				"tenantId": "[parameters('azureTenantId')]",
				"accessPolicies": [],
				"sku": {
					"name": "[parameters('keyVaultSkuName')]",
					"family": "A"
				},
				"networkAcls": {
					"defaultAction": "Allow",
					"bypass": "AzureServices"
				}
			}
		}
	]
}